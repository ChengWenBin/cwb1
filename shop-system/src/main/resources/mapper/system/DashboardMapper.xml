<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.system.mapper.DashboardMapper">

    <select id="getSalesTrend" resultType="map">
        SELECT DATE(create_time) AS date, SUM(total_amount) AS sales
        FROM `order`
        WHERE order_status != '已取消'
        GROUP BY DATE(create_time)
        ORDER BY DATE(create_time)
    </select>

    <select id="getProductSales" resultType="map">
        SELECT
            CASE 
                WHEN p.category IS NULL OR p.category = '' THEN '其他'
                ELSE p.category
            END AS category,
            SUM(oi.total_price) AS sales
        FROM order_item oi
                 JOIN product p ON oi.product_id = p.id
                 JOIN `order` o ON oi.order_id = o.order_id
        WHERE o.order_status != '已取消'
        GROUP BY category
    </select>

    <select id="getOrderTrend" resultType="map">
        SELECT DATE(create_time) AS date, COUNT(*) AS orderCount
        FROM `order`
        GROUP BY DATE(create_time)
        ORDER BY DATE(create_time)
    </select>

    <select id="getOrderStatus" resultType="map">
        SELECT order_status AS status, COUNT(*) AS count
        FROM `order`
        GROUP BY order_status
    </select>

    <select id="getSalesReportTotalSales" resultType="map">
        SELECT SUM(total_amount) as totalSales FROM `order` WHERE order_status != '已取消'
    </select>
    <select id="getSalesReportProductSales" resultType="map">
        SELECT p.name, SUM(oi.quantity) AS quantity, SUM(oi.total_price) AS amount
        FROM order_item oi
                 JOIN product p ON oi.product_id = p.id
                 JOIN `order` o ON oi.order_id = o.order_id
        WHERE o.order_status != '已取消'
        GROUP BY p.name
    </select>

    <select id="getSalesReportDailySales" resultType="map">
        SELECT DATE(create_time) AS date, SUM(total_amount) AS amount
        FROM `order`
        WHERE order_status != '已取消'
        GROUP BY DATE(create_time)
        ORDER BY DATE(create_time)
    </select>

    <select id="getOrderReport" resultType="map">
        SELECT create_time, user_id, order_no, order_status, total_amount, address
        FROM `order`
        ORDER BY create_time DESC
    </select>
    
    <select id="getCategorySalesByType" resultType="map">
        SELECT 
            p.name, 
            SUM(oi.quantity) AS value
        FROM 
            order_item oi
            JOIN product p ON oi.product_id = p.id
            JOIN `order` o ON oi.order_id = o.order_id
        WHERE 
            o.order_status != '已取消'
            <if test="category != '其他'">
                AND p.category = #{category}
            </if>
            <if test="category == '其他'">
                AND (p.category IS NULL OR p.category = '')
            </if>
        GROUP BY 
            p.name
        ORDER BY 
            value DESC
    </select>
    
    <!-- 用户的购买类别统计 -->
    <select id="getUserCategorySales" resultType="map">
        SELECT 
            p.category AS name, 
            SUM(oi.quantity) AS value
        FROM 
            order_item oi
            JOIN product p ON oi.product_id = p.id
            JOIN `order` o ON oi.order_id = o.order_id
        WHERE 
            o.order_status != '已取消'
            AND o.user_id = #{userId}
        GROUP BY 
            p.category
        ORDER BY 
            value DESC
    </select>
    
    <!-- 热门产品排行 -->
    <select id="getHotProducts" resultType="map">
        SELECT 
            p.name, 
            SUM(oi.quantity) AS sales
        FROM 
            order_item oi
            JOIN product p ON oi.product_id = p.id
            JOIN `order` o ON oi.order_id = o.order_id
        WHERE 
            o.order_status != '已取消'
        GROUP BY 
            p.name
        ORDER BY 
            sales DESC
        LIMIT 10
    </select>
    
    <!-- 季节性销售趋势 -->
    <select id="getSeasonalTrendByCategory" resultType="int">
        SELECT 
            IFNULL(SUM(oi.quantity), 0) AS value
        FROM 
            order_item oi
            JOIN product p ON oi.product_id = p.id
            JOIN `order` o ON oi.order_id = o.order_id
        WHERE 
            o.order_status != '已取消'
            AND p.category = #{category}
        GROUP BY 
            QUARTER(o.create_time)
        ORDER BY 
            QUARTER(o.create_time)
    </select>
    
    <!-- 获取所有产品类型 -->
    <select id="getAllProductCategories" resultType="java.lang.String">
        SELECT DISTINCT category 
        FROM product 
        WHERE category IS NOT NULL AND category != ''
    </select>

</mapper>