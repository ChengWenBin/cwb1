<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.system.mapper.SysFeedbackMapper">
    
    <resultMap type="SysFeedback" id="SysFeedbackResult">
        <id     property="feedbackId"      column="feedback_id"      />
        <result property="userId"          column="user_id"          />
        <result property="userName"        column="user_name"        />
        <result property="content"         column="content"          />
        <result property="reply"           column="reply"            />
        <result property="status"          column="status"           />
        <result property="isRead"          column="is_read"          />
        <result property="createBy"        column="create_by"        />
        <result property="createTime"      column="create_time"      />
        <result property="updateBy"        column="update_by"        />
        <result property="updateTime"      column="update_time"      />
    </resultMap>
    
    <sql id="selectFeedbackVo">
        select feedback_id, user_id, user_name, content, reply, status, is_read, create_by, create_time, update_by, update_time
        from sys_feedback
    </sql>
    
    <select id="selectFeedbackList" parameterType="SysFeedback" resultMap="SysFeedbackResult">
        <include refid="selectFeedbackVo"/>
        <where>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="userName != null and userName != ''">
                AND user_name like concat('%', #{userName}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="isRead != null and isRead != ''">
                AND is_read = #{isRead}
            </if>
        </where>
        order by create_time desc
    </select>
    
    <select id="selectFeedbackById" parameterType="Long" resultMap="SysFeedbackResult">
        <include refid="selectFeedbackVo"/>
        where feedback_id = #{feedbackId}
    </select>
    
    <select id="selectFeedbackListByUserId" parameterType="Long" resultMap="SysFeedbackResult">
        <include refid="selectFeedbackVo"/>
        where user_id = #{userId}
        order by create_time desc
    </select>
    
    <select id="selectUnreadFeedbackCount" resultType="Integer">
        select count(1) from sys_feedback where is_read = '0'
    </select>
    
    <select id="selectUserUnreadReplyCount" parameterType="Long" resultType="Integer">
        select count(1) from sys_feedback 
        where user_id = #{userId} and reply is not null and status = '1' and is_read = '0'
    </select>
    
    <insert id="insertFeedback" parameterType="SysFeedback" useGeneratedKeys="true" keyProperty="feedbackId">
        insert into sys_feedback (
            <if test="userId != null">user_id,</if>
            <if test="userName != null and userName != ''">user_name,</if>
            <if test="content != null and content != ''">content,</if>
            <if test="reply != null and reply != ''">reply,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="isRead != null and isRead != ''">is_read,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            create_time
        ) values (
            <if test="userId != null">#{userId},</if>
            <if test="userName != null and userName != ''">#{userName},</if>
            <if test="content != null and content != ''">#{content},</if>
            <if test="reply != null and reply != ''">#{reply},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="isRead != null and isRead != ''">#{isRead},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            sysdate()
        )
    </insert>
    
    <update id="updateFeedback" parameterType="SysFeedback">
        update sys_feedback
        <set>
            <if test="reply != null">reply = #{reply},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="isRead != null and isRead != ''">is_read = #{isRead},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where feedback_id = #{feedbackId}
    </update>
    
    <delete id="deleteFeedbackByIds" parameterType="Long">
        delete from sys_feedback where feedback_id in 
        <foreach collection="array" item="feedbackId" open="(" separator="," close=")">
            #{feedbackId}
        </foreach>
    </delete>
    
</mapper> 